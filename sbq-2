abstract class BankAccount {
    protected String accountNumber;
    protected double balance;

    public BankAccount(String accountNumber, double balance) {
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: $" + amount);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrew: $" + amount);
        } else {
            System.out.println("Invalid withdraw amount or insufficient balance.");
        }
    }

    public double getBalance() {
        return balance;
    }

    public abstract void applyMonthlyInterestOrFee();
}

class SavingsAccount extends BankAccount {
    private static final double INTEREST_RATE = 0.04;

    public SavingsAccount(String accountNumber, double balance) {
        super(accountNumber, balance);
    }

    @Override
    public void applyMonthlyInterestOrFee() {
        balance += balance * INTEREST_RATE;
        System.out.println("Applied monthly interest: $" + (balance * INTEREST_RATE));
    }
}

class CheckingAccount extends BankAccount {
    private static final double MINIMUM_BALANCE = 500;
    private static final double FEE = 50;

    public CheckingAccount(String accountNumber, double balance) {
        super(accountNumber, balance);
    }

    @Override
    public void withdraw(double amount) {
        super.withdraw(amount);
        if (balance < MINIMUM_BALANCE) {
            balance -= FEE;
            System.out.println("Balance fell below minimum. Fee charged: $" + FEE);
        }
    }

    @Override
    public void applyMonthlyInterestOrFee() {
        // No monthly interest for checking accounts
    }
}
public class BankManagement {
    public static void main(String[] args) {
        // Test case 1: Deposit $500 into a savings account with a balance of $1000
        SavingsAccount savingsAccount = new SavingsAccount("SA1001", 1000);
        System.out.println("Initial Balance (Savings): $" + savingsAccount.getBalance());
        savingsAccount.deposit(500);
        System.out.println("Balance after deposit: $" + savingsAccount.getBalance());

        // Test case 2: Withdraw $200 from a checking account with a balance of $600
        CheckingAccount checkingAccount = new CheckingAccount("CA2001", 600);
        System.out.println("\nInitial Balance (Checking): $" + checkingAccount.getBalance());
        checkingAccount.withdraw(200);
        System.out.println("Balance after withdrawal: $" + checkingAccount.getBalance());

        // Test case 3: View the balance of a savings account after applying monthly interest
        System.out.println("\nBalance before interest (Savings): $" + savingsAccount.getBalance());
        savingsAccount.applyMonthlyInterestOrFee();
        System.out.println("Balance after applying interest: $" + savingsAccount.getBalance());

        // Test case 4: Withdraw $100 from a checking account with a balance of $400 (check for minimum balance and fee)
        CheckingAccount checkingAccount2 = new CheckingAccount("CA2002", 400);
        System.out.println("\nInitial Balance (Checking): $" + checkingAccount2.getBalance());
        checkingAccount2.withdraw(100);
        System.out.println("Balance after withdrawal and fee: $" + checkingAccount2.getBalance());
    }
}
